// --- File: .env.local (NON includere mai nel commit pubblico!)
SUPABASE_URL=https://xamwxiedqgtgdvispjpu.supabase.co
SUPABASE_ANON_KEY=la_tua_anon_key
OPENAI_API_KEY=la_tua_openai_key

// --- File: utils/openai.ts
import OpenAI from 'openai';

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY! });

export async function estraiDatiFattura(testo: string): Promise<string> {
  const res = await openai.chat.completions.create({
    model: 'gpt-4o',
    messages: [
      { role: 'system', content: 'Estrai nome prodotto, prezzo e quantitÃ  da una fattura.' },
      { role: 'user', content: testo }
    ],
    max_tokens: 500,
  });

  return res.choices[0].message.content || '';
}

// --- File: lib/supabase.ts
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = process.env.SUPABASE_URL!;
const supabaseKey = process.env.SUPABASE_ANON_KEY!;
export const supabase = createClient(supabaseUrl, supabaseKey);

// --- File: pages/api/fatture.ts
import type { NextApiRequest, NextApiResponse } from 'next';
import { estraiDatiFattura } from '../../utils/openai';
import { supabase } from '../../lib/supabase';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const { testo } = req.body;
  const estratto = await estraiDatiFattura(testo);

  // Salva un esempio nel DB (da adattare per inserimenti reali)
  await supabase.from('fatture').insert([{ testo_originale: testo, dati_estratti: estratto }]);

  res.status(200).json({ estratto });
}

// --- File: pages/fatture.tsx
import { useState } from 'react';

export default function Fatture() {
  const [testo, setTesto] = useState('');
  const [risultato, setRisultato] = useState('');

  const inviaFattura = async () => {
    const res = await fetch('/api/fatture', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ testo }),
    });
    const data = await res.json();
    setRisultato(data.estratto);
  };

  return (
    <main className="p-6 max-w-xl mx-auto">
      <h1 className="text-xl font-bold mb-4">Caricamento Fattura</h1>
      <textarea
        rows={6}
        className="w-full border p-2 mb-4"
        placeholder="Incolla qui il testo della fattura"
        value={testo}
        onChange={(e) => setTesto(e.target.value)}
      />
      <button onClick={inviaFattura} className="bg-blue-600 text-white px-4 py-2 rounded">Invia</button>
      <pre className="mt-6 whitespace-pre-wrap bg-gray-100 p-4">{risultato}</pre>
    </main>
  );
}
